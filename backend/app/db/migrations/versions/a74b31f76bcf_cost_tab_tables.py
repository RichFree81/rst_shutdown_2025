"""cost tab tables

Revision ID: a74b31f76bcf
Revises: a1b2c3d4e5f6
Create Date: 2025-08-31 14:46:00.046953

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a74b31f76bcf'
down_revision: Union[str, Sequence[str], None] = 'a1b2c3d4e5f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('work_package_costs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('work_package_id', sa.String(length=36), nullable=False),
    sa.Column('rto_number', sa.String(length=64), nullable=True),
    sa.Column('po_number', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Enum('AWAITING_SCOPING', 'AWAITING_TENDER_PACK', 'AWAITING_BID_SUBMISSIONS', 'PENDING_AWARD', 'AWARDED', name='work_package_cost_status_enum', native_enum=False), nullable=False),
    sa.Column('original_contract_price', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('allowances', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('work_package_id', name='uq_costs_wp_id')
    )
    op.create_index('idx_costs_wp_id', 'work_package_costs', ['work_package_id'], unique=False)
    op.create_index(op.f('ix_work_package_costs_work_package_id'), 'work_package_costs', ['work_package_id'], unique=False)
    op.create_table('cost_breakdown_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('work_package_cost_id', sa.String(length=36), nullable=False),
    sa.Column('item', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('value_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('value_amount >= 0', name='ck_breakdown_value_nonneg'),
    sa.ForeignKeyConstraint(['work_package_cost_id'], ['work_package_costs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requisitions_to_order',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('work_package_cost_id', sa.String(length=36), nullable=False),
    sa.Column('rto_number', sa.String(length=64), nullable=True),
    sa.Column('supplier', sa.String(length=160), nullable=True),
    sa.Column('contact_person', sa.String(length=160), nullable=True),
    sa.Column('email', sa.String(length=160), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('subtotal_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['work_package_cost_id'], ['work_package_costs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rto_number'),
    sa.UniqueConstraint('work_package_cost_id')
    )
    op.create_table('variation_orders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('work_package_cost_id', sa.String(length=36), nullable=False),
    sa.Column('vo_number', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('value_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PROPOSED', 'APPROVED', 'REJECTED', 'PENDING', 'IN_PROGRESS', name='variation_order_status_enum', native_enum=False), nullable=False),
    sa.Column('date_raised', sa.Date(), nullable=False),
    sa.Column('date_approved', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('value_amount >= 0', name='ck_vo_value_nonneg'),
    sa.ForeignKeyConstraint(['work_package_cost_id'], ['work_package_costs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rto_selected_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('rto_id', sa.String(length=36), nullable=False),
    sa.Column('breakdown_item_id', sa.String(length=36), nullable=True),
    sa.Column('included', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['breakdown_item_id'], ['cost_breakdown_items.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['rto_id'], ['requisitions_to_order.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rto_id', 'breakdown_item_id', name='uq_rto_breakdown_item')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rto_selected_items')
    op.drop_table('variation_orders')
    op.drop_table('requisitions_to_order')
    op.drop_table('cost_breakdown_items')
    op.drop_index(op.f('ix_work_package_costs_work_package_id'), table_name='work_package_costs')
    op.drop_index('idx_costs_wp_id', table_name='work_package_costs')
    op.drop_table('work_package_costs')
    # ### end Alembic commands ###
